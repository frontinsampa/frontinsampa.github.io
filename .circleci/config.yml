##############
## Anchors. ##
##############

anchors:
  - &directory ~/project

  - &github_branch_master site
  - &github_branch_public master

  - &environment
    GOOGLE_UA: UA-32925160-3
    PATH_PUBLIC: ./public
    GITHUB_BRANCH_PUBLIC: *github_branch_public
    PRISMIC_API: https://frontinsampa.cdn.prismic.io/api/v2
    PRISMIC_TOKEN:

    # GitHub variables required by @semantic-release/git.
    # https://github.com/semantic-release/git#environment-variables
    GIT_AUTHOR_NAME: front-in-bot
    GIT_AUTHOR_EMAIL: technologies@frontinsampa.com.br
    GIT_COMMITTER_NAME: Front In Bot
    GIT_COMMITTER_EMAIL: technologies@frontinsampa.com.br

  - &machine
    working_directory: ~/project

    docker:
      - image: circleci/node:10.15.0

    environment: *environment

  - &packages_store
    save_cache:
      name: Save node_modules to cache
      key: v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn

  - &packages_restore
    restore_cache:
      name: Restore node_modules from cache
      keys:
        - v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v1-node-{{ arch }}-{{ .Branch }}-
        - v1-node-{{ arch }}-

  - &packages_install
    run:
      name: Install packages
      command: yarn --freeze-lockfile

####################
## Configuration. ##
####################

version: 2.1

jobs:
  setup:
    <<: *machine

    steps:
      - checkout
      - *packages_restore
      - *packages_install
      - *packages_store

  test_static:
    <<: *machine

    steps:
      - checkout
      - *packages_restore
      - *packages_install

      - run:
          name: Run static test
          command: yarn test:static

  test_unit:
    <<: *machine

    steps:
      - checkout
      - *packages_restore
      - *packages_install

      - run:
          name: Run unit test
          command: yarn test:unit

  build:
    <<: *machine

    steps:
      - checkout
      - *packages_restore
      - *packages_install

      - run:
          name: Generate build production-based
          command: yarn build

      - persist_to_workspace:
          root: *directory
          paths: .

  release:
    <<: *machine

    steps:
      - checkout

      - attach_workspace:
          at: *directory

      - run:
          name: Generate release
          command: |
            npm install @semantic-release/changelog @semantic-release/git -s
            npx semantic-release

  deploy:
    <<: *machine

    steps:
      - checkout

      - attach_workspace:
          at: *directory

      - *packages_restore
      - *packages_install

      - run:
          name: Publish to host
          command: |
            echo "www.frontinsampa.com.br" >> ./${PATH_PUBLIC}/CNAME
            npx gh-pages --branch ${GITHUB_BRANCH_PUBLIC} --dist ${PATH_PUBLIC}

workflows:
  version: 2

  development:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - *github_branch_master
                - *github_branch_public

      - test_static:
          requires:
            - setup

      - test_unit:
          requires:
            - setup

      - build:
          requires:
            - test_static
            - test_unit

  production:
    jobs:
      - setup:
          filters:
            branches:
              only: *github_branch_master
              # If this works, sorry.
              ignore: *github_branch_public

      - test_static:
          requires:
            - setup

      - test_unit:
          requires:
            - setup

      - build:
          requires:
            - test_static
            - test_unit

      - release:
          requires:
            - build

      - deploy:
          requires:
            - release
